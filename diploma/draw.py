from mpl_toolkits.mplot3d import Axes3Dimport matplotlib.pyplot as pltimport matplotlib.cm as cmfrom matplotlib.patches import *import numpy as npdef drawGraph( dimension, x, y, polygons, matrix, spt, spm, drawMap=False, drawPolygons=True, drawTree=True, drawGr=False):	fig = plt.figure()	ax = fig.add_subplot(111)	if drawMap:		plt.imshow(spm.transpose(),origin='lower')		#ax.pcolormesh(spm)			if drawPolygons:		prev = 0		for p in polygons:			ax.fill(x[prev:p], y[prev:p], color='0.50', fill=True)			prev = p	if drawGr:		for i in range(0, len(x)):			for j in range(0, len(y)):				if matrix[i,j] > 0.1:					ax.plot([x[i], x[j]], [y[i], y[j]], color='red')	if drawTree:		for i in range(0, len(spt)):			if spt[i] >= 0 and spt[i] <= len(x):				ax.plot([x[i], x[spt[i]]], [y[i], y[spt[i]]], color='green')	ax.set_xlim((0,dimension[0]))	ax.set_ylim((0,dimension[0]))	plt.show()	return """R = np.random.rand(dimension)	G = np.random.rand(dimension)	B = np.random.rand(dimension)	if drawMap:		for i in range(0, dimension):			for j in range(0, dimension):				if spm[i][j] > -1:					ax.add_patch(Rectangle([i, j], 1.0, 1.0, color=(spm[i][j], spm[i][j], spm[i][j])))					"""